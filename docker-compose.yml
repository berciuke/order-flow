services:
  backend-api:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    env_file:
      - ./backend-api/.env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/orderflow?schema=public
      - NODE_ENV=development
    volumes:
      - ./backend-api:/app
      - /app/node_modules
    command: sh -c "npx prisma migrate dev --name init && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d orderflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_BACKEND_URL=http://backend-api:8000
    depends_on:
      - backend-api
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/index.html"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend-dev:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules 
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true 
      - WATCHPACK_POLLING=true   
    networks:
      - app-network
    depends_on:
      - backend-api
    stdin_open: true 
    tty: true        

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
