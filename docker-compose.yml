# backend-api
services:
  backend-api:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    env_file:
      - ./backend-api/.env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/orderflow?schema=public
      - NODE_ENV=development
    volumes:
      - ./backend-api:/app
      - /app/node_modules
    command: sh -c "npx prisma migrate dev --name init && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - orderflow-net

  # postgres
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderflow
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d orderflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orderflow-net

# networks
networks:
  orderflow-net:
    driver: bridge

# volumes
volumes:
  pgdata:

# Aby uruchomić wszystkie usługi, użyj polecenia:
# docker compose up --build
#
# Aby zatrzymać usługi:
# docker compose down
#
# Aby usunąć wolumeny (uwaga, dane zostaną utracone!):
# docker compose down -v
