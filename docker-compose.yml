version: "3.8"

services:
  postgres-keycloak:
    image: postgres:16.2
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak  
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - postgres-keycloak
    networks:
      - app-network

  backend-api:
    build: ./backend-api
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=oauth2-app
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_KEYCLOAK_URL=http://localhost:8080
      - REACT_APP_KEYCLOAK_REALM=oauth2-app
      - REACT_APP_KEYCLOAK_CLIENT_ID=spa-client
    networks:
      - app-network

  ssr-client:
    build: ./ssr-client  
    ports:
      - "3002:3002"
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=oauth2-app
      - KEYCLOAK_CLIENT_ID=ssr-client
      - KEYCLOAK_CLIENT_SECRET=secret123
      - RESOURCE_API=http://backend-api:8000
    networks:
      - app-network

  training-service:
    build: ./order-service
    ports:
      - "8001:8001"
    environment:
      - CLIENT_ID=training-service-client
      - CLIENT_SECRET=secret123
      - TOKEN_ENDPOINT=http://keycloak:8080/realms/oauth2-app/protocol/openid-connect/token
      - RESOURCE_API=http://backend-api:8000
    networks:
      - app-network

volumes:
  keycloak_data:

networks:
  app-network:
    driver: bridge
